import json
import re
matrix=[]
blosum30=open("EBLOSUM30.txt")
blosum35=open("EBLOSUM35.txt")
blosum40=open("EBLOSUM40.txt")
blosum45=open("EBLOSUM45.txt")
blosum50=open("EBLOSUM50.txt")
blosum55=open("EBLOSUM55.txt")
blosum60=open("EBLOSUM60.txt")
blosum62=open("EBLOSUM62.txt")
blosum6212=open("EBLOSUM62-12.txt")
blosum65=open("EBLOSUM65.txt")
blosum70=open("EBLOSUM70.txt")
blosum75=open("EBLOSUM75.txt")
blosum80=open("EBLOSUM80.txt")
blosum85=open("EBLOSUM85.txt")
blosum90=open("EBLOSUM90.txt")
blosumn=open("EBLOSUMN.txt")

PAM10=open("EPAM10.txt")
PAM20=open("EPAM20.txt")
PAM30=open("EPAM30.txt")
PAM40=open("EPAM40.txt")
PAM50=open("EPAM50.txt")
PAM60=open("EPAM60.txt")
PAM70=open("EPAM70.txt")
PAM80=open("EPAM80.txt")
PAM90=open("EPAM90.txt")
PAM100=open("EPAM100.txt")
PAM110=open("EPAM110.txt")
PAM120=open("EPAM120.txt")
PAM130=open("EPAM130.txt")
PAM140=open("EPAM140.txt")
PAM150=open("EPAM150.txt")
PAM160=open("EPAM160.txt")
PAM170=open("EPAM170.txt")
PAM180=open("EPAM180.txt")
PAM190=open("EPAM190.txt")
PAM200=open("EPAM200.txt")
PAM210=open("EPAM210.txt")
PAM220=open("EPAM220.txt")
PAM230=open("EPAM230.txt")
PAM240=open("EPAM240.txt")
PAM250=open("EPAM250.txt")
PAM260=open("EPAM260.txt")
PAM270=open("EPAM270.txt")
PAM280=open("EPAM280.txt")
PAM290=open("EPAM290.txt")
PAM300=open("EPAM300.txt")
PAM310=open("EPAM310.txt")
PAM320=open("EPAM320.txt")
PAM330=open("EPAM330.txt")
PAM340=open("EPAM340.txt")
PAM350=open("EPAM350.txt")
PAM360=open("EPAM360.txt")
PAM370=open("EPAM370.txt")
PAM380=open("EPAM380.txt")
PAM390=open("EPAM390.txt")
PAM400=open("EPAM400.txt")
PAM410=open("EPAM410.txt")
PAM420=open("EPAM420.txt")
PAM430=open("EPAM430.txt")
PAM440=open("EPAM440.txt")
PAM450=open("EPAM450.txt")
PAM460=open("EPAM460.txt")
PAM470=open("EPAM470.txt")
PAM480=open("EPAM480.txt")
PAM490=open("EPAM490.txt")
PAM500=open("EPAM500.txt")





def parser(matrix1):
	mat=open ("matrix.json","w")
	content= matrix1.read()
	lines= content.split("\n")
	for i in lines:
		j=i.split(" ")
		for k in range(len(j)):
			if j[0]=="#":

				if j[k]=="^blosum([0-9]{2})":
					print j[k]
			else:
				matrix.append(i.split(" +"))
	matrix2=json.dumps(matrix)
	# print matrix2
	mat.write("{",)
	mat .write(matrix2,)
	mat.write("}",)


parser(blosum30)
parser(blosum35)
parser(blosum40)
parser(blosum45)
parser(blosum50)
parser(blosum55)
parser(blosum60)
parser(blosum65)
parser(blosum70)
parser(blosum75)
parser(blosum80)
parser(blosum85)
parser(blosum90)
parser(blosumn)

# print matrix2


blosum30.close()
blosum35.close()
blosum40.close()
blosum45.close()
blosum50.close()
blosum55.close()
blosum60.close()
blosum62.close()
blosum6212.close()
blosum65.close()
blosum70.close()
blosum75.close()
blosum80.close()
blosum85.close()
blosum90.close()
blosumn.close()
PAM10.close()
PAM20.close()
PAM30.close()
PAM40.close()
PAM50.close()
PAM60.close()
PAM70.close()
PAM80.close()
PAM90.close()
PAM100.close()
PAM110.close()
PAM120.close()
PAM130.close()
PAM140.close()
PAM150.close()
PAM160.close()
PAM170.close()
PAM180.close()
PAM190.close()
PAM200.close()
PAM210.close()
PAM220.close()
PAM230.close()
PAM240.close()
PAM250.close()
PAM260.close()
PAM270.close()
PAM280.close()
PAM290.close()
PAM300.close()
PAM310.close()
PAM320.close()
PAM330.close()
PAM340.close()
PAM350.close()
PAM360.close()
PAM370.close()
PAM380.close()
PAM390.close()
PAM400.close()
PAM410.close()
PAM420.close()
PAM430.close()
PAM440.close()
PAM450.close()
PAM460.close()
PAM470.close()
PAM480.close()
PAM490.close()
PAM500.close()

